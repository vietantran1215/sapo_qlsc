<<<<<<< HEAD
import React, { useEffect, useState } from 'react';
=======
import React, { useEffect, useRef, useState } from 'react';
>>>>>>> an
import { Button, Row, Col, Card } from 'antd';
import { LeftOutlined } from '@ant-design/icons';
import { NavLink } from 'react-router-dom';
import CustomerContainer from '../../../container/MaintenanceCardAdd/CustomerContainer';
import { bindActionCreators } from 'redux';
import { connect } from 'react-redux';
import * as maintenanceCardAddActions from '../../../actions/maintenanceCardAdd'
import ProductContainer from '../../../container/MaintenanceCardAdd/ProductContainer';
import PaymentHistoryContainer from '../../../container/MaintenanceCardAdd/PaymentHistoryContainer';
import MaintenanceCardInfoContainer from '../../../container/MaintenanceCardAdd/MaintenanceCardInfoContainer';
import StatusHistoryContainer from '../../../container/MaintenanceCardAdd/StatusHistoryContainer';
import Modal from 'antd/lib/modal/Modal';
import { useReactToPrint } from 'react-to-print';
import ExportMaintenanceCards from './ExportMaintenanceCards';
const MaintenanceCardEdit = (props) => {

    const [visible, setVisible] = useState(false);

    useEffect(() => {
        const { maintenanceCardAddActionCreators } = props;
        const { actFetchMaintenanceCardById } = maintenanceCardAddActionCreators;
        actFetchMaintenanceCardById(props.match.params.id)
    }, [props.maintenanceCardAdd.reset]);

    const [returnDate, setReturnDate] = useState(null);

    useEffect(() => {
        setReturnDate(props.maintenanceCardAdd.info.returnDate)
    }, [props.maintenanceCardAdd.info.returnDate]);

    const [workStatus, setWorkStatus] = useState(0);

    useEffect(() => {
        setWorkStatus(props.maintenanceCardAdd.workStatus)
    }, [props.maintenanceCardAdd.workStatus]);

    const renderTitleCard = (text) => {
        return (
            <>
                <div>{text}</div>
            </>
        )
    }

    const deleteMaintenanceCard = () => {
        const { maintenanceCardAddActionCreators } = props;
        const { actDeleteMaintenanceCard } = maintenanceCardAddActionCreators;
        actDeleteMaintenanceCard(props.match.params.id)
        setVisible(false)
    }

    const componentRef = useRef();
    const exportFile = useReactToPrint({
        content: () => componentRef.current
    });

    return (
        <>
            <Modal
                visible={visible}
                title="Xóa khách hàng"
                onCancel={() => {
                    setVisible(false)
                }}
                onOk={deleteMaintenanceCard}
                cancelText={"Thoát"}
                okText={"Hủy"}
                footer={[
                    <Button key={1} onClick={() => {
                    setVisible(false)
                }}>
                        Thoát
                                        </Button>,
                    <Button danger type="primary" onClick={deleteMaintenanceCard} >
                        Hủy
                                        </Button>
                ]}
            >
                <p>Bạn có chắc chắn muốn hủy phiếu ?</p>
            </Modal>
            <div style={{ width: '98%', marginRight: '1%', marginLeft: '1%' }}>
                <div style={{ marginBottom: 16, marginTop: 30 }}>
                    <p><NavLink to='/admin/maintenanceCards'><LeftOutlined /> Danh sách phiếu sửa chữa</NavLink></p>
                    <span style={{ fontWeight: 'bold', fontSize: 35 }}>
                        Thông tin phiếu sửa chữa
                </span>
                    <div>
                        <Button type="button" onClick={exportFile}>Xuất file</Button>
                        <div style={{ display: "none" }}>
                            <ExportMaintenanceCards ref={componentRef} data={{...props.maintenanceCardAdd}}/>
                        </div>
                    </div>
                    <div style={{ float: 'right' }}>
                        <div style={{ display: 'inline' }}>

<<<<<<< HEAD
                            {props.user.role !== 2 && returnDate === null ? <>
=======
                            {props.user.role === 1 && returnDate === null ? <>
>>>>>>> an
                                {
                                    props.maintenanceCardAdd.workStatus === 0 && props.maintenanceCardAdd.paymentHistories.length === 0 ?
                                        (
                                            <Button style={{ height: 37, marginRight: 10 }} type="ghost" onClick={() => {
                                                setVisible(true)
                                            }} >
                                                <span>Hủy</span>
                                            </Button>
                                        ) : ""
                                }

                                <Button style={{ height: 37 }} type="primary" form="maintenanceCardInfo" key="submit" htmlType="submit" >
                                    <span>Lưu</span>
                                </Button>
                            </>
                                : ""}
<<<<<<< HEAD
                            {props.user.role === 2 && workStatus !== 2 ? <>
=======
                            {props.user.role === 2 && props.maintenanceCardAdd.workStatus !== 2 ? <>
>>>>>>> an
                                <Button style={{ height: 37 }} type="primary" onClick={() => {
                                    const { maintenanceCardAddActionCreators } = props
                                    const { actCompleteCard } = maintenanceCardAddActionCreators;
                                    let maintenanceCardId = [];
                                    maintenanceCardId.push(props.match.params.id)
                                    actCompleteCard(maintenanceCardId)
                                }} >
                                    <span>Hoàn thành phiếu</span>
                                </Button>
                            </>
                                : ""}

                        </div>
                    </div>
                </div>
                <Row>
                    <Col span={18}>
                        <div style={{ marginBottom: 16, width: '100%' }}>
                            <Card title={renderTitleCard("Thông tin khách hàng")} bordered={false} style={{ width: '100%', borderRadius: 3 }}>
                                <CustomerContainer close={false} />
                            </Card>
                        </div>
                        <div style={{ marginBottom: 16, width: '100%' }}>
                            <Card title={renderTitleCard("Thông tin sản phẩm")} bordered={false} style={{ width: '100%', borderRadius: 3 }}>
                                <ProductContainer />
                            </Card>
                        </div>
                        <div style={{ marginBottom: 16, width: '100%', marginTop: 20 }}>
                            <PaymentHistoryContainer />
                        </div>
                    </Col>
                    <Col span={6}>
                        <div style={{ marginBottom: 16, width: '100%', paddingLeft: '5%' }}>
                            <Card title={renderTitleCard("Thông tin đơn hàng")} bordered={true} style={{ width: '100%', borderRadius: 3, border: 'none' }}>
                                <MaintenanceCardInfoContainer />
                            </Card>
                        </div>
                        <div style={{ marginBottom: 16, width: '100%', paddingLeft: '5%' }}>
                            <Card title={renderTitleCard("Lịch sử thay đổi trạng thái dịch vụ")} bordered={true} style={{ width: '100%', borderRadius: 3, border: 'none' }}>
                                <StatusHistoryContainer />
                            </Card>
                        </div>
                    </Col>
                </Row>

            </div>
        </>
    );
}

const mapStateToProps = (state) => {
    return {
        maintenanceCardAdd: state.maintenanceCardAdd,
        user: state.userReducer,
    }
}

const mapDispatchToProps = (dispatch) => {
    return {
        maintenanceCardAddActionCreators: bindActionCreators(maintenanceCardAddActions, dispatch),
    }
}

export default connect(mapStateToProps, mapDispatchToProps)(MaintenanceCardEdit);